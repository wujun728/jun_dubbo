<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Blog">

    <typeAlias alias="blog" type="com.company.project.model.Blog"/>

    <resultMap id="blogResult" class="blog">
        <result property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="birthDate" column="birth_date"/>
        <result property="sex" column="sex"/>
        <result property="title" column="title"/>
        <result property="length" column="length"/>
        <result property="content" column="content"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="commonSelectColumnsPrefix">
	    <![CDATA[
	    select
        	id ,
        	username ,
        	birth_date ,
        	sex ,
        	title ,
        	length ,
        	content 
	    ]]>
	</sql>
	
    <insert id="insert" parameterClass="blog">
    <![CDATA[
        INSERT INTO
        blog (
        	id ,
        	username ,
        	birth_date ,
        	sex ,
        	title ,
        	length ,
        	content 
        ) VALUES (
        	#id# ,
        	#username# ,
        	#birthDate# ,
        	#sex# ,
        	#title# ,
        	#length# ,
        	#content# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="java.lang.Long" type="post" keyProperty="id" >
            select last_insert_id()
        </selectKey>
    </insert>

    <update id="update" parameterClass="blog">
    <![CDATA[
        UPDATE blog SET
	        username = #username# ,
	        birth_date = #birthDate# ,
	        sex = #sex# ,
	        title = #title# ,
	        length = #length# ,
	        content = #content# 
        WHERE 
	        id = #id# 
    ]]>
    </update>

    <delete id="delete" parameterClass="java.lang.Long">
    <![CDATA[
        delete from blog where
        id = #id# 
    ]]>
    </delete>
    
    <select id="getById" resultMap="blogResult">
	    <include refid="commonSelectColumnsPrefix"/>
	    <![CDATA[
	        from blog 
	        where 
		        id = #id# 
	    ]]>
    </select>

	<sql id="dynamicWhere">
	    <dynamic prepend="WHERE">
	       <isNotEmpty prepend="AND" property="id">
	             id = #id#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="username">
	             username = #username#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="birthDate">
	             birth_date = #birthDate#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="sex">
	             sex = #sex#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="title">
	             title = #title#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="length">
	             length = #length#
	       </isNotEmpty>
	       <isNotEmpty prepend="AND" property="content">
	             content = #content#
	       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="count" resultClass="long">
    <![CDATA[
        select 
        count(*)
        from blog
    ]]>
		<include refid="dynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="pageSelect" resultMap="blogResult">
    	<include refid="commonSelectColumnsPrefix"/>
	    <![CDATA[
	        from blog 
	    ]]>
		<include refid="dynamicWhere"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>

    <select id="getByUsername" resultMap="blogResult" parameterClass="java.lang.String">
	    <include refid="commonSelectColumnsPrefix"/>
	    <![CDATA[
	        from blog where username = #username#
	    ]]>
    </select>
    
	
</sqlMap>
