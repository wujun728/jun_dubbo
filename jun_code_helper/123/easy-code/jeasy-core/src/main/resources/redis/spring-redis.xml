<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">

    <!-- 以前项目中的配置，注意需要添加Spring Data Redis等jar包 -->
    <description>Spring Redis配置</description>

    <!--属性文件 -->
    <context:property-placeholder location="classpath*:redis/redis.properties"/>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="minIdle" value="${redis.minIdle}"/>
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <!-- JedisConnectionFactory -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.ip}"/>
        <property name="port" value="${redis.port}"/>
        <property name="poolConfig" ref="jedisPoolConfig"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactory">
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
        </property>
    </bean>

    <!-- 使用jdk redis 序列化 -->
    <bean id="jdkRedisSerializer" class="com.jeasy.common.redis.JdkRedisSerializer"/>
    <bean id="redisTemplateWithJdkRedisSearializer" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="valueSerializer" ref="jdkRedisSerializer"/>
    </bean>
    <!-- 使用jdk redis 序列化,有捕获异常 -->
    <bean id="redisCustomTemplateWithJdkRedisSearializer" class="com.jeasy.common.redis.RedisCustomTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="valueSerializer" ref="jdkRedisSerializer"/>
    </bean>

    <!--使用fastjson序列化 -->
    <bean id="fastjsonValueSerializer" class="com.jeasy.common.redis.FastJsonRedisSerializer"/>
    <bean id="redisTemplateWithFastjsonSearializer" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="valueSerializer" ref="fastjsonValueSerializer"/>
    </bean>
    <!--使用fastjson序列化 ,有捕获异常 -->
    <bean id="redisCustomTemplateWithFastjsonSearializer" class="com.jeasy.common.redis.RedisCustomTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="valueSerializer" ref="fastjsonValueSerializer"/>
    </bean>
</beans>
