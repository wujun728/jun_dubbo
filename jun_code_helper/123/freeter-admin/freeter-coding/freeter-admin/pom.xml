<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>com.freeter</groupId>
		<artifactId>freeter-coding</artifactId>
		<version>3.2.0</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>freeter-admin</artifactId>
	<packaging>jar</packaging>
	<description>freeter-admin</description>

	<properties>
	<!-- 	<quartz.version>2.3.0</quartz.version> -->
		<shiro.version>1.3.2</shiro.version>
		<kaptcha.version>0.0.9</kaptcha.version>
		<qiniu.version>[7.2.0, 7.2.99]</qiniu.version>
		<aliyun.oss.version>2.5.0</aliyun.oss.version>
		<qcloud.cos.version>4.4</qcloud.cos.version>
		<swagger.version>2.7.0</swagger.version>
		<velocity.version>1.7</velocity.version>

	</properties>

	<dependencies>
		<dependency>
			<groupId>com.freeter</groupId>
			<artifactId>freeter-common</artifactId>
			<version>3.2.0</version>
		</dependency>
		<dependency>
			<groupId>com.freeter</groupId>
			<artifactId>freeter-good</artifactId>
			<version>3.2.0</version>
		</dependency>
		<dependency>
			<groupId>com.freeter</groupId>
			<artifactId>freeter-user</artifactId>
			<version>3.2.0</version>
		</dependency>
		 <dependency>
			<groupId>com.freeter</groupId>
			<artifactId>freeter-job</artifactId>
			<version>3.2.0</version>
		</dependency> 
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-core</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>${shiro.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.axet</groupId>
			<artifactId>kaptcha</artifactId>
			<version>${kaptcha.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>com.qiniu</groupId>
			<artifactId>qiniu-java-sdk</artifactId>
			<version>${qiniu.version}</version>
		</dependency>
		<dependency>
			<groupId>com.aliyun.oss</groupId>
			<artifactId>aliyun-sdk-oss</artifactId>
			<version>${aliyun.oss.version}</version>
		</dependency>
		<dependency>
			<groupId>com.qcloud</groupId>
			<artifactId>cos_api</artifactId>
			<version>${qcloud.cos.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>cn.hutool</groupId>
			<artifactId>hutool-all</artifactId>
			<version>4.0.12</version>
		</dependency>
		<dependency>
			<artifactId>velocity</artifactId>
			<groupId>org.apache.velocity</groupId>
			<version>${velocity.version}</version>
		</dependency>

		<dependency>
			<groupId>com.freeter</groupId>
			<artifactId>FYOpenApi</artifactId>
			<version>1.0</version>
			<scope>system</scope>
			<systemPath>${pom.basedir}/libs/FYOpenApi.jar</systemPath>
		</dependency>

	</dependencies>
	<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-actuator</artifactId> 
		</dependency> -->


	<build>
		<finalName>${project.artifactId}</finalName>

		<!--<resources> <resource> <directory>libs</directory> &lt;!&ndash; 注意这里，我用的是springboot，所以是boot-inf 
			&ndash;&gt; <targetPath>BOOT-INF/lib/</targetPath> <includes> <include>**/*.jar</include> 
			</includes> </resource> &lt;!&ndash; <resource> <directory>src/main/resources</directory> 
			注意这里，我用的是springboot，所以是boot-inf <targetPath>BOOT-INF/classes/</targetPath> 
			<includes> <include>**/*</include> </includes> </resource> &ndash;&gt; <resource> 
			<directory>src/main/resources</directory> <targetPath>/com/freeter/</targetPath> 
			</resource> </resources> -->
		<!-- <resources> <resource> <directory>src/main/resources</directory> <filtering>true</filtering> 
			</resource> </resources> -->
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>springloaded</artifactId>
						<version>1.2.6.RELEASE</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<fork>true</fork>
				</configuration>
			</plugin>
			<!-- 跳过单元测试 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.14</version>
				<configuration>
					<imageName>renren/admin</imageName>
					<dockerDirectory>${pom.basedir}</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
				<!-- 运行命令 mvn clean package docker:build 打包并生成docker镜像 -->
			</plugin>
		</plugins>
	</build>
	<groupId>com.freeter</groupId>
	<version>3.2.0</version>
</project>